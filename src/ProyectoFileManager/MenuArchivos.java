/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProyectoFileManager;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.io.IOException;
import java.util.InputMismatchException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.io.RandomAccessFile;
/**
 *
 * @author andre
 */
public class MenuArchivos extends javax.swing.JPanel {

    /**
     * Creates new form MenuArchivos
     */
    public MenuArchivos() {
        initComponents();
        jLabel3.setVisible(false);
        comboBox.setVisible(false);
        selectButton.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        salirButton = new javax.swing.JButton();
        nuevoButton = new javax.swing.JButton();
        cerrarButton = new javax.swing.JButton();
        abrirButton = new javax.swing.JButton();
        salvarButton = new javax.swing.JButton();
        comboBox = new javax.swing.JComboBox<>();
        selectButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 1, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProyectoFileManager/document.png"))); // NOI18N
        jLabel1.setText("ARCHIVOS");
        add(jLabel1);
        jLabel1.setBounds(110, 30, 200, 40);

        salirButton.setFont(new java.awt.Font("Arial", 0, 17)); // NOI18N
        salirButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProyectoFileManager/sign-out.png"))); // NOI18N
        salirButton.setText("Salir");
        salirButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salirButtonMouseClicked(evt);
            }
        });
        add(salirButton);
        salirButton.setBounds(290, 260, 110, 40);

        nuevoButton.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        nuevoButton.setText("Nuevo");
        nuevoButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nuevoButtonMouseClicked(evt);
            }
        });
        add(nuevoButton);
        nuevoButton.setBounds(140, 80, 140, 30);

        cerrarButton.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cerrarButton.setText("Cerrar");
        cerrarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cerrarButtonMouseClicked(evt);
            }
        });
        add(cerrarButton);
        cerrarButton.setBounds(140, 200, 140, 30);

        abrirButton.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        abrirButton.setText("Abrir");
        abrirButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                abrirButtonMouseClicked(evt);
            }
        });
        add(abrirButton);
        abrirButton.setBounds(140, 120, 140, 30);

        salvarButton.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        salvarButton.setText("Salvar");
        salvarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salvarButtonMouseClicked(evt);
            }
        });
        add(salvarButton);
        salvarButton.setBounds(140, 160, 140, 30);

        comboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        add(comboBox);
        comboBox.setBounds(110, 120, 200, 30);

        selectButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        selectButton.setText("Select");
        selectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectButtonMouseClicked(evt);
            }
        });
        add(selectButton);
        selectButton.setBounds(160, 160, 100, 30);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Archivos en Carpeta disponibles");
        add(jLabel3);
        jLabel3.setBounds(100, 100, 230, 20);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProyectoFileManager/Fondo.png"))); // NOI18N
        add(jLabel2);
        jLabel2.setBounds(-6, -6, 420, 320);
    }// </editor-fold>//GEN-END:initComponents

    private void salirButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salirButtonMouseClicked
        MenuPrincipal mp = new MenuPrincipal();
        Main.frame.Panel(mp);

    }//GEN-LAST:event_salirButtonMouseClicked
    //JOptionPane.showMessageDialog(null, "LLENE LOS CUADROS DE TEXTO!!!", "ERROR", JOptionPane.ERROR_MESSAGE);


    private void nuevoButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nuevoButtonMouseClicked

        try {
            Main.fileName = "c:\\" + JOptionPane.showInputDialog("Ingrese ruta de archivo: ");
            Main.name = JOptionPane.showInputDialog("Ingrese nombre del archivo: ");
            Main.carpeta = new File(Main.fileName);
            Main.carpeta.mkdirs();
            Main.file = new RandomAccessFile(Main.fileName + "\\" + Main.name + ".txt", "rw");
            Main.file.seek(0);
            Main.file.writeInt(0);
            Main.file.writeInt(0);
            Main.file.writeInt(-1); //para guardar el head para el avail list
            Main.file.writeLong(0); //para guardar tamaño de estructura de cabecera
            JOptionPane.showMessageDialog(null, "¡Archivo creado exitosamente!", "Archivos", JOptionPane.INFORMATION_MESSAGE);
            Main.file.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MenuArchivos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MenuArchivos.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_nuevoButtonMouseClicked

    private void salvarButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salvarButtonMouseClicked
        boolean isKey = false;
        if (Main.open) {
            try {
                Main.file.close();
                Main.carpeta.delete();
                Main.carpeta = new File(Main.fileName);
                Main.carpeta.mkdirs();
                Main.file = new RandomAccessFile(Main.fileName + "\\" + Main.name + ".txt", "rw");
                Main.file.seek(0);
                Main.file.writeInt(Main.cantRegis);
                Main.file.writeInt(Main.recordSize);
                Main.file.writeInt(Main.head);
                Main.file.writeLong(Main.structure);
                for (int i = 0; i < Main.campos.size(); i++) {
                    Campo c = Main.campos.get(i);

                    Main.file.writeUTF(c.getNombre());
                    Main.file.writeChar(':');
                    Main.file.writeUTF(c.getTipo());
                    Main.file.writeChar(':');
                    Main.file.writeInt(c.getSize());
                    Main.file.writeChar(':');
                    if (c.getLlave()) {
                        Main.indexFile = new RandomAccessFile(Main.fileName + "\\" + Main.name + c.getNombre() + "Index.txt", "rw");
                    }
                    Main.file.writeBoolean(c.getLlave());
                    Main.file.writeChar('|');

                }

                JOptionPane.showMessageDialog(null, "¡Archivo salvado exitosamente!", "Archivos", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException ex) {
                Logger.getLogger(MenuArchivos.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "¡No existe archivo abierto!", "Archivos", JOptionPane.ERROR_MESSAGE);
        }

        //primero verificar que archivo seleccionado esté abierto, esto en salvar
        //char a[] = new char[10];
        //maestros.writeUTF(a.toString());

    }//GEN-LAST:event_salvarButtonMouseClicked

    private void cerrarButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarButtonMouseClicked
        if (!Main.open) {
            JOptionPane.showMessageDialog(null, "¡No tiene archivo abierto!");
        } else {
            Main.open = false;
            Main.campos.clear();
            Main.key = "";
            try {
                Main.file.close();
                //    Main.indexFile.close(); //cuando cierro el archivo data tambien cierro el indexFile
                JOptionPane.showMessageDialog(null, "¡Archivo cerrado exitosamente!", "Archivos", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException ex) {
                Logger.getLogger(MenuArchivos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cerrarButtonMouseClicked


    private void abrirButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_abrirButtonMouseClicked

        if (Main.open) {
            JOptionPane.showMessageDialog(null, "¡Ya existe un archivo abierto!", "Archivos", JOptionPane.ERROR_MESSAGE);
        } else {
            Main.fileName = "c:\\" + JOptionPane.showInputDialog("Ingrese ruta de archivo: ");
            Main.carpeta = new File(Main.fileName);
            if (Main.carpeta.isDirectory()) {
                jLabel3.setVisible(true);
                comboBox.setVisible(true);
                selectButton.setVisible(true);
                System.out.println("si entre");
                nuevoButton.setVisible(false);
                abrirButton.setVisible(false);
                salvarButton.setVisible(false);
                cerrarButton.setVisible(false);

                for (int x = 0; x < Main.carpeta.list().length; x++) {
                    comboBox.addItem(Main.carpeta.list()[x]);
                }
            } else {
                JOptionPane.showMessageDialog(null, "¡Carpeta no existe!", "Archivos", JOptionPane.ERROR_MESSAGE);
            }
        }


    }//GEN-LAST:event_abrirButtonMouseClicked

    static String stripExtension (String str) {
        // Handle null case specially.

        if (str == null) return null;

        // Get position of last '.'.

        int pos = str.lastIndexOf(".");

        // If there wasn't any '.' just return the string as is.

        if (pos == -1) return str;

        // Otherwise return the string, up to the dot.

        return str.substring(0, pos);
    }
    
    private void selectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectButtonMouseClicked

        
                //  Main.name = JOptionPane.showInputDialog("Ingrese nombre del archivo: ");
                String test = comboBox.getSelectedItem().toString();
                Main.name = stripExtension(test);
                System.out.println(Main.name);
                File tmp = new File(Main.fileName + "\\" + Main.name + ".txt");
                System.out.println(Main.fileName + "\\" + Main.name);
                if (!tmp.exists()) {
                    Main.name = "";
                    Main.fileName = "";
                    JOptionPane.showMessageDialog(null, "¡Archivo no existe!", "Archivos", JOptionPane.ERROR_MESSAGE);
                } else {
                    try {
                        Main.open = true;
                        //Main.indexFile = new RandomAccessFile(Main.fileName + "\\" + Main.name + "Index.txt", "rw");
                        Main.file = new RandomAccessFile(Main.fileName + "\\" + Main.name + ".txt", "rw");
                        try {
                            if (Main.file.length() != 0) {
                                Main.file.seek(0);
                                Main.cantRegis = Main.file.readInt();
                                Main.recordSize = Main.file.readInt();
                                Main.head = Main.file.readInt();
                                Main.structure = Main.file.readLong();
                                if (Main.structure == 0) {
                                    while (Main.file.getFilePointer() < Main.file.length()) {
                                        String n = Main.file.readUTF();
                                        Main.file.readChar();
                                        String t = Main.file.readUTF();
                                        Main.file.readChar();
                                        int s = Main.file.readInt();
                                        Main.file.readChar();
                                        boolean k = Main.file.readBoolean();
                                        Main.file.readChar();
                                        Main.campos.add(new Campo(n, t, s, k));
                                        if (k) {
                                            Main.key = n;
                                        }
                                    }
                                } else {
                                    int campos = 0;

                                    while (Main.file.getFilePointer() < Main.structure) {
                                        String n = Main.file.readUTF();
                                        Main.file.readChar();
                                        String t = Main.file.readUTF();
                                        Main.file.readChar();
                                        int s = Main.file.readInt();
                                        Main.file.readChar();
                                        boolean k = Main.file.readBoolean();
                                        Main.file.readChar();
                                        Main.campos.add(new Campo(n, t, s, k));
                                        if (k) {
                                            Main.key = n;
                                        }
                                        campos++;
                                    }
                                    int x = 0;
                                    while (x < Main.cantRegis) {
                                        int posicion = 0;
                                        boolean esRegistro = true;
                                        Object[] row = new Object[campos];
                                        posicion = (int) Main.file.getFilePointer();
                                        for (int i = 0; i < campos; i++) {
                                            if (Main.campos.get(i).tipo.equals("char")) {
                                                row[i] = Main.file.readUTF();
                                                if (row[i].toString().charAt(0) == '-' && row[i].toString().charAt(1) == '1') {
                                                    esRegistro = false;
                                                }
                                            } else {
                                                row[i] = (Integer) Main.file.readInt();
                                                if (row[i].toString().equals("-1")) {
                                                    esRegistro = false;
                                                }
                                            }
                                        }
                                        if (!esRegistro) {
                                            int posContinuacion = (int) Main.file.getFilePointer();

                                            Main.lista.agregarNodo(posicion);
                                            Main.file.seek(posContinuacion);

                                        }
                                        x++;
                                    }

                                }
                            }
                        } catch (IOException ex) {
                            Logger.getLogger(MenuArchivos.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(MenuArchivos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    JOptionPane.showMessageDialog(null, "¡Archivo abierto exitosamente!", "Archivos", JOptionPane.INFORMATION_MESSAGE);
                    //aqui vuelvo again visible los elementos

                    nuevoButton.setVisible(true);
                    abrirButton.setVisible(true);
                    salvarButton.setVisible(true);
                    cerrarButton.setVisible(true);
                    jLabel3.setVisible(false);
                    comboBox.setVisible(false);
                    selectButton.setVisible(false);
                }

    }//GEN-LAST:event_selectButtonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abrirButton;
    private javax.swing.JButton cerrarButton;
    private javax.swing.JComboBox<String> comboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton nuevoButton;
    private javax.swing.JButton salirButton;
    private javax.swing.JButton salvarButton;
    private javax.swing.JButton selectButton;
    // End of variables declaration//GEN-END:variables
}
